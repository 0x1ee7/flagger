(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{278:function(e,t,a){"use strict";a.r(t);var s=a(37),n=Object(s.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"canaries-with-helm-charts-and-gitops"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#canaries-with-helm-charts-and-gitops","aria-hidden":"true"}},[e._v("#")]),e._v(" Canaries with Helm charts and GitOps")]),e._v(" "),a("p",[e._v("This guide shows you how to package a web app into a Helm chart, trigger canary deployments on Helm upgrade and automate the chart release process with Weave Flux.")]),e._v(" "),a("h2",{attrs:{id:"packaging"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#packaging","aria-hidden":"true"}},[e._v("#")]),e._v(" Packaging")]),e._v(" "),a("p",[e._v("You'll be using the "),a("a",{attrs:{href:"https://github.com/stefanprodan/k8s-podinfo",target:"_blank",rel:"noopener noreferrer"}},[e._v("podinfo"),a("OutboundLink")],1),e._v(" chart. This chart packages a web app made with Go, it's configuration, a horizontal pod autoscaler (HPA) and the canary configuration file.")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("├── Chart.yaml\n├── README.md\n├── templates\n│   ├── NOTES.txt\n│   ├── _helpers.tpl\n│   ├── canary.yaml\n│   ├── configmap.yaml\n│   ├── deployment.yaml\n│   ├── hpa.yaml\n│   ├── service.yaml\n│   └── tests\n│       ├── test-config.yaml\n│       └── test-pod.yaml\n└── values.yaml\n")])])]),a("p",[e._v("You can find the chart source "),a("a",{attrs:{href:"https://github.com/stefanprodan/flagger/tree/master/charts/podinfo",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install","aria-hidden":"true"}},[e._v("#")]),e._v(" Install")]),e._v(" "),a("p",[e._v("Create a test namespace with Istio sidecar injection enabled:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("export")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("REPO")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("https://raw.githubusercontent.com/weaveworks/flagger/master\n\nkubectl apply -f "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("${REPO}")]),e._v("/artifacts/namespaces/test.yaml\n")])])]),a("p",[e._v("Add Flagger Helm repository:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("helm repo "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" flagger https://flagger.app\n")])])]),a("p",[e._v("Install podinfo with the release name "),a("code",[e._v("frontend")]),e._v(" (replace "),a("code",[e._v("example.com")]),e._v(" with your own domain):")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("helm upgrade -i frontend flagger/podinfo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--namespace "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("test")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("nameOverride")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("frontend "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("backend")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("http://backend.test:9898/echo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set canary.enabled"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set canary.istioIngress.enabled"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set canary.istioIngress.gateway"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("public-gateway.istio-system.svc.cluster.local "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set canary.istioIngress.host"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("frontend.istio.example.com\n")])])]),a("p",[e._v("Flagger takes a Kubernetes deployment and a horizontal pod autoscaler (HPA), then creates a series of objects (Kubernetes deployments, ClusterIP services and Istio virtual services). These objects expose the application on the mesh and drive the canary analysis and promotion.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# generated by Helm ")]),e._v("\nconfigmap/frontend\ndeployment.apps/frontend\nhorizontalpodautoscaler.autoscaling/frontend\ncanary.flagger.app/frontend\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# generated by Flagger")]),e._v("\nconfigmap/frontend-primary\ndeployment.apps/frontend-primary\nhorizontalpodautoscaler.autoscaling/frontend-primary\nservice/frontend\nservice/frontend-canary\nservice/frontend-primary\nvirtualservice.networking.istio.io/frontend\n")])])]),a("p",[e._v("When the "),a("code",[e._v("frontend-primary")]),e._v(" deployment comes online, Flagger will route all traffic to the primary pods and scale to zero the "),a("code",[e._v("frontend")]),e._v(" deployment.")]),e._v(" "),a("p",[e._v("Open your browser and navigate to the frontend URL:")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/weaveworks/flagger/master/docs/screens/demo-frontend.png",alt:"Podinfo Frontend"}})]),e._v(" "),a("p",[e._v("Now let's install the "),a("code",[e._v("backend")]),e._v(" release without exposing it outside the mesh:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("helm upgrade -i backend flagger/podinfo "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--namespace "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("test")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("nameOverride")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("backend "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set canary.enabled"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set canary.istioIngress.enabled"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("false\n")])])]),a("p",[e._v("Check if Flagger has successfully deployed the canaries:")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl -n test get canaries\n\nNAME       STATUS        WEIGHT   LASTTRANSITIONTIME\nbackend    Initialized   0        2019-02-12T18:53:18Z\nfrontend   Initialized   0        2019-02-12T17:50:50Z\n")])])]),a("p",[e._v("Click on the ping button in the "),a("code",[e._v("frontend")]),e._v(" UI to trigger a HTTP POST request that will reach the "),a("code",[e._v("backend")]),e._v(" app:")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/weaveworks/flagger/master/docs/screens/demo-frontend-jaeger.png",alt:"Jaeger Tracing"}})]),e._v(" "),a("p",[e._v("We'll use the "),a("code",[e._v("/echo")]),e._v(" endpoint (same as the one the ping button calls) to generate load on both apps during a canary deployment.")]),e._v(" "),a("h2",{attrs:{id:"upgrade"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#upgrade","aria-hidden":"true"}},[e._v("#")]),e._v(" Upgrade")]),e._v(" "),a("p",[e._v("First let's install a load testing service that will generate traffic during analysis:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("helm upgrade -i flagger-loadtester flagger/loadtester "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--namespace"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("test\n")])])]),a("p",[e._v("Install Flagger's helm test runner in the "),a("code",[e._v("kube-system")]),e._v(" using "),a("code",[e._v("tiller")]),e._v(" service account:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("helm upgrade -i flagger-helmtester flagger/loadtester "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--namespace"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("kube-system "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("serviceAccountName")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("tiller\n")])])]),a("p",[e._v("Enable the load and helm tester and deploy a new "),a("code",[e._v("frontend")]),e._v(" version:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("helm upgrade -i frontend flagger/podinfo/ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--namespace "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("test")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--reuse-values "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set canary.loadtest.enabled"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set canary.helmtest.enabled"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set image.tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("3.1")]),e._v(".1\n")])])]),a("p",[e._v("Flagger detects that the deployment revision changed and starts the canary analysis:")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl -n istio-system logs deployment/flagger -f | jq .msg\n\nNew revision detected! Scaling up frontend.test\nHalt advancement frontend.test waiting for rollout to finish: 0 of 2 updated replicas are available\nStarting canary analysis for frontend.test\nPre-rollout check helm test passed\nAdvance frontend.test canary weight 5\nAdvance frontend.test canary weight 10\nAdvance frontend.test canary weight 15\nAdvance frontend.test canary weight 20\nAdvance frontend.test canary weight 25\nAdvance frontend.test canary weight 30\nAdvance frontend.test canary weight 35\nAdvance frontend.test canary weight 40\nAdvance frontend.test canary weight 45\nAdvance frontend.test canary weight 50\nCopying frontend.test template spec to frontend-primary.test\nHalt advancement frontend-primary.test waiting for rollout to finish: 1 old replicas are pending termination\nPromotion completed! Scaling down frontend.test\n")])])]),a("p",[e._v("You can monitor the canary deployment with Grafana. Open the Flagger dashboard, select "),a("code",[e._v("test")]),e._v(" from the namespace dropdown, "),a("code",[e._v("frontend-primary")]),e._v(" from the primary dropdown and "),a("code",[e._v("frontend")]),e._v(" from the canary dropdown.")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/weaveworks/flagger/master/docs/screens/demo-frontend-dashboard.png",alt:"Flagger Grafana Dashboard"}})]),e._v(" "),a("p",[e._v("Now trigger a canary deployment for the "),a("code",[e._v("backend")]),e._v(" app, but this time you'll change a value in the configmap:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("helm upgrade -i backend flagger/podinfo/ "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--namespace "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("test")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--reuse-values "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set canary.loadtest.enabled"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set canary.helmtest.enabled"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set httpServer.timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("25s\n")])])]),a("p",[e._v("Generate HTTP 500 errors:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("kubectl -n "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("test")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" -it flagger-loadtester-xxx-yyy "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("watch")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" http://backend-canary:9898/status/500\n")])])]),a("p",[e._v("Generate latency:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("kubectl -n "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("test")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" -it flagger-loadtester-xxx-yyy "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("sh")]),e._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("watch")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" http://backend-canary:9898/delay/1\n")])])]),a("p",[e._v("Flagger detects the config map change and starts a canary analysis. Flagger will pause the advancement when the HTTP success rate drops under 99% or when the average request duration in the last minute is over 500ms:")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kubectl -n test describe canary backend\n\nEvents:\n\nConfigMap backend has changed\nNew revision detected! Scaling up backend.test\nStarting canary analysis for backend.test\nAdvance backend.test canary weight 5\nAdvance backend.test canary weight 10\nAdvance backend.test canary weight 15\nAdvance backend.test canary weight 20\nAdvance backend.test canary weight 25\nAdvance backend.test canary weight 30\nAdvance backend.test canary weight 35\nHalt backend.test advancement success rate 62.50% < 99%\nHalt backend.test advancement success rate 88.24% < 99%\nAdvance backend.test canary weight 40\nAdvance backend.test canary weight 45\nHalt backend.test advancement request duration 2.415s > 500ms\nHalt backend.test advancement request duration 2.42s > 500ms\nAdvance backend.test canary weight 50\nConfigMap backend-primary synced\nCopying backend.test template spec to backend-primary.test\nPromotion completed! Scaling down backend.test\n")])])]),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/weaveworks/flagger/master/docs/screens/demo-backend-dashboard.png",alt:"Flagger Grafana Dashboard"}})]),e._v(" "),a("p",[e._v("If the number of failed checks reaches the canary analysis threshold, the traffic is routed back to the primary, the canary is scaled to zero and the rollout is marked as failed.")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("kubectl -n "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("test")]),e._v(" get canary\n\nNAME       STATUS        WEIGHT   LASTTRANSITIONTIME\nbackend    Succeeded     "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2019")]),e._v("-02-12T19:33:11Z\nfrontend   Failed        "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[e._v("2019")]),e._v("-02-12T19:47:20Z\n")])])]),a("p",[e._v("If you've enabled the Slack notifications, you'll receive an alert with the reason why the "),a("code",[e._v("backend")]),e._v(" promotion failed.")]),e._v(" "),a("h2",{attrs:{id:"gitops-automation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitops-automation","aria-hidden":"true"}},[e._v("#")]),e._v(" GitOps automation")]),e._v(" "),a("p",[e._v("Instead of using Helm CLI from a CI tool to perform the install and upgrade, you could use a Git based approach. GitOps is a way to do Continuous Delivery, it works by using Git as a source of truth for declarative infrastructure and workloads. In the "),a("a",{attrs:{href:"https://www.weave.works/technologies/gitops/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitOps model"),a("OutboundLink")],1),e._v(", any change to production must be committed in source control prior to being applied on the cluster. This way rollback and audit logs are provided by Git.")]),e._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/weaveworks/flagger/master/docs/diagrams/flagger-flux-gitops.png",alt:"Helm GitOps Canary Deployment"}})]),e._v(" "),a("p",[e._v("In order to apply the GitOps pipeline model to Flagger canary deployments you'll need a Git repository with your workloads definitions in YAML format, a container registry where your CI system pushes immutable images and an operator that synchronizes the Git repo with the cluster state.")]),e._v(" "),a("p",[e._v("Create a git repository with the following content:")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("├── namespaces\n│   └── test.yaml\n└── releases\n    └── test\n        ├── backend.yaml\n        ├── frontend.yaml\n        ├── loadtester.yaml\n        └── helmtester.yaml\n")])])]),a("p",[e._v("Define the "),a("code",[e._v("frontend")]),e._v(" release using Flux "),a("code",[e._v("HelmRelease")]),e._v(" custom resource:")]),e._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" flux.weave.works/v1beta1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" HelmRelease\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" frontend\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" test\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("fluxcd.io/automated")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"true"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("filter.fluxcd.io/chart-image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" semver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("~3.1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("releaseName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" frontend\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("chart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("git")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//github.com/weaveowrks/flagger\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("ref")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" master\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" charts/podinfo\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("repository")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" stefanprodan/podinfo\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" 3.1.0\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("backend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("//backend"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("podinfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("9898/echo\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("canary")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("istioIngress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("gateway")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" public"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("gateway.istio"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("system.svc.cluster.local\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" frontend.istio.example.com\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("loadtest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("helmtest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n")])])]),a("p",[e._v("In the "),a("code",[e._v("chart")]),e._v(" section I've defined the release source by specifying the Helm repository (hosted on GitHub Pages),\nchart name and version. In the "),a("code",[e._v("values")]),e._v(" section I've overwritten the defaults set in values.yaml.")]),e._v(" "),a("p",[e._v("With the "),a("code",[e._v("fluxcd.io")]),e._v(" annotations I instruct Flux to automate this release.\nWhen an image tag in the sem ver range of "),a("code",[e._v("3.1.0 - 3.1.99")]),e._v(" is pushed to Docker Hub,\nFlux will upgrade the Helm release and from there Flagger will pick up the change and start a canary deployment.")]),e._v(" "),a("p",[e._v("Install "),a("a",{attrs:{href:"https://github.com/fluxcd/flux",target:"_blank",rel:"noopener noreferrer"}},[e._v("Flux"),a("OutboundLink")],1),e._v(" and its\n"),a("a",{attrs:{href:"https://github.com/fluxcd/helm-operator",target:"_blank",rel:"noopener noreferrer"}},[e._v("Helm Operator"),a("OutboundLink")],1),e._v(" by specifying your Git repo URL:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("helm repo "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" fluxcd https://charts.fluxcd.io\n\nhelm "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v(" --name flux "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set git.url"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("git@github.com:"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("USERNAME"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("/"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("REPOSITORY"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--namespace fluxcd "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\nfluxcd/flux\n\nhelm upgrade -i helm-operator fluxcd/helm-operator "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--namespace fluxcd "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n--set git.ssh.secretName"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("flux-git-deploy\n")])])]),a("p",[e._v("At startup Flux generates a SSH key and logs the public key. Find the SSH public key with:")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[e._v("kubectl -n fluxcd logs deployment/flux "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" identity.pub "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("cut")]),e._v(" -d "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'\"'")]),e._v(" -f2\n")])])]),a("p",[e._v("In order to sync your cluster state with Git you need to copy the public key\nand create a deploy key with write access on your GitHub repository.")]),e._v(" "),a("p",[e._v("Open GitHub, navigate to your fork, go to "),a("em",[e._v("Setting > Deploy keys")]),e._v(" click on "),a("em",[e._v("Add deploy key")]),e._v(", check "),a("em",[e._v("Allow write access")]),e._v(",\npaste the Flux public key and click "),a("em",[e._v("Add key")]),e._v(".")]),e._v(" "),a("p",[e._v("After a couple of seconds Flux will apply the Kubernetes resources from Git and\nFlagger will launch the "),a("code",[e._v("frontend")]),e._v(" and "),a("code",[e._v("backend")]),e._v(" apps.")]),e._v(" "),a("p",[e._v("A CI/CD pipeline for the "),a("code",[e._v("frontend")]),e._v(" release could look like this:")]),e._v(" "),a("ul",[a("li",[e._v("cut a release from the master branch of the podinfo code repo with the git tag "),a("code",[e._v("3.1.1")])]),e._v(" "),a("li",[e._v("CI builds the image and pushes the "),a("code",[e._v("podinfo:3.1.1")]),e._v(" image to the container registry")]),e._v(" "),a("li",[e._v("Flux scans the registry and updates the Helm release "),a("code",[e._v("image.tag")]),e._v(" to "),a("code",[e._v("3.1.1")])]),e._v(" "),a("li",[e._v("Flux commits and push the change to the cluster repo")]),e._v(" "),a("li",[e._v("Flux applies the updated Helm release on the cluster")]),e._v(" "),a("li",[e._v("Flux Helm Operator picks up the change and calls Tiller to upgrade the release")]),e._v(" "),a("li",[e._v("Flagger detects a revision change and scales up the "),a("code",[e._v("frontend")]),e._v(" deployment")]),e._v(" "),a("li",[e._v("Flagger runs the helm test before routing traffic to the canary service")]),e._v(" "),a("li",[e._v("Flagger starts the load test and runs the canary analysis")]),e._v(" "),a("li",[e._v("Based on the analysis result the canary deployment is promoted to production or rolled back")]),e._v(" "),a("li",[e._v("Flagger sends a Slack or MS Teams notification with the canary result")])]),e._v(" "),a("p",[e._v("If the canary fails, fix the bug, do another patch release eg "),a("code",[e._v("3.1.2")]),e._v(" and the whole process will run again.")]),e._v(" "),a("p",[e._v("A canary deployment can fail due to any of the following reasons:")]),e._v(" "),a("ul",[a("li",[e._v("the container image can't be downloaded")]),e._v(" "),a("li",[e._v("the deployment replica set is stuck for more then ten minutes (eg. due to a container crash loop)")]),e._v(" "),a("li",[e._v("the webooks (acceptance tests, helm tests, load tests, etc) are returning a non 2xx response")]),e._v(" "),a("li",[e._v("the HTTP success rate (non 5xx responses) metric drops under the threshold")]),e._v(" "),a("li",[e._v("the HTTP average duration metric goes over the threshold")]),e._v(" "),a("li",[e._v("the Istio telemetry service is unable to collect traffic metrics")]),e._v(" "),a("li",[e._v("the metrics server (Prometheus) can't be reached")])]),e._v(" "),a("p",[e._v("If you want to find out more about managing Helm releases with Flux here are two in-depth guides:\n"),a("a",{attrs:{href:"https://github.com/stefanprodan/gitops-helm",target:"_blank",rel:"noopener noreferrer"}},[e._v("gitops-helm"),a("OutboundLink")],1),e._v("\nand "),a("a",{attrs:{href:"https://github.com/stefanprodan/gitops-istio",target:"_blank",rel:"noopener noreferrer"}},[e._v("gitops-istio"),a("OutboundLink")],1),e._v(".")])])},[],!1,null,null,null);t.default=n.exports}}]);