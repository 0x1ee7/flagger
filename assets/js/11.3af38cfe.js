(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{271:function(a,e,s){"use strict";s.r(e);var t=s(37),r=Object(t.a)({},function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"flagger-install-on-eks-app-mesh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flagger-install-on-eks-app-mesh","aria-hidden":"true"}},[a._v("#")]),a._v(" Flagger Install on EKS App Mesh")]),a._v(" "),s("p",[a._v("This guide walks you through setting up Flagger and AWS App Mesh on EKS.")]),a._v(" "),s("h2",{attrs:{id:"app-mesh"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#app-mesh","aria-hidden":"true"}},[a._v("#")]),a._v(" App Mesh")]),a._v(" "),s("p",[a._v("The App Mesh integration with EKS is made out of the following components:")]),a._v(" "),s("ul",[s("li",[a._v("Kubernetes custom resources\n"),s("ul",[s("li",[s("code",[a._v("mesh.appmesh.k8s.aws")]),a._v(" defines a logical boundary for network traffic between the services")]),a._v(" "),s("li",[s("code",[a._v("virtualnode.appmesh.k8s.aws")]),a._v(" defines a logical pointer to a Kubernetes workload")]),a._v(" "),s("li",[s("code",[a._v("virtualservice.appmesh.k8s.aws")]),a._v(" defines the routing rules for a workload inside the mesh")])])]),a._v(" "),s("li",[a._v("CRD controller - keeps the custom resources in sync with the App Mesh control plane")]),a._v(" "),s("li",[a._v("Admission controller - injects the Envoy sidecar and assigns Kubernetes pods to App Mesh virtual nodes")]),a._v(" "),s("li",[a._v("Telemetry service - Prometheus instance that collects and stores Envoy's metrics")])]),a._v(" "),s("h2",{attrs:{id:"create-a-kubernetes-cluster"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-a-kubernetes-cluster","aria-hidden":"true"}},[a._v("#")]),a._v(" Create a Kubernetes cluster")]),a._v(" "),s("p",[a._v("In order to create an EKS cluster you can use "),s("a",{attrs:{href:"https://eksctl.io",target:"_blank",rel:"noopener noreferrer"}},[a._v("eksctl"),s("OutboundLink")],1),a._v(". Eksctl is an open source command-line utility made by Weaveworks in collaboration with Amazon.")]),a._v(" "),s("p",[a._v("On MacOS you can install eksctl with Homebrew:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("brew tap weaveworks/tap\nbrew "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" weaveworks/tap/eksctl\n")])])]),s("p",[a._v("Create an EKS cluster:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("eksctl create cluster --name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("appmesh "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--region"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("us-west-2 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--nodes "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--node-volume-size"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("120")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--appmesh-access\n")])])]),s("p",[a._v("The above command will create a two nodes cluster with App Mesh "),s("a",{attrs:{href:"https://docs.aws.amazon.com/app-mesh/latest/userguide/MESH_IAM_user_policies.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("IAM policy"),s("OutboundLink")],1),a._v(" attached to the EKS node instance role.")]),a._v(" "),s("p",[a._v("Verify the install with:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl get nodes\n")])])]),s("h2",{attrs:{id:"install-helm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-helm","aria-hidden":"true"}},[a._v("#")]),a._v(" Install Helm")]),a._v(" "),s("p",[a._v("Install the "),s("a",{attrs:{href:"https://docs.helm.sh/using_helm/#installing-helm",target:"_blank",rel:"noopener noreferrer"}},[a._v("Helm"),s("OutboundLink")],1),a._v(" command-line tool:")]),a._v(" "),s("div",{staticClass:"language-text extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("brew install kubernetes-helm\n")])])]),s("p",[a._v("Create a service account and a cluster role binding for Tiller:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl -n kube-system create sa tiller\n\nkubectl create clusterrolebinding tiller-cluster-rule "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--clusterrole"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("cluster-admin "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--serviceaccount"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("kube-system:tiller\n")])])]),s("p",[a._v("Deploy Tiller in the "),s("code",[a._v("kube-system")]),a._v(" namespace:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("helm init --service-account tiller\n")])])]),s("p",[a._v("You should consider using SSL between Helm and Tiller, for more information on securing your Helm installation see "),s("a",{attrs:{href:"https://docs.helm.sh/using_helm/#securing-your-helm-installation",target:"_blank",rel:"noopener noreferrer"}},[a._v("docs.helm.sh"),s("OutboundLink")],1),a._v(".")]),a._v(" "),s("h2",{attrs:{id:"enable-horizontal-pod-auto-scaling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enable-horizontal-pod-auto-scaling","aria-hidden":"true"}},[a._v("#")]),a._v(" Enable horizontal pod auto-scaling")]),a._v(" "),s("p",[a._v("Install the Horizontal Pod Autoscaler (HPA) metrics provider:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("helm upgrade -i metrics-server stable/metrics-server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--namespace kube-system "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("--kubelet-preferred-address-types"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("InternalIP\n")])])]),s("p",[a._v("After a minute, the metrics API should report CPU and memory usage for pods. You can very the metrics API with:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl -n kube-system "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("top")]),a._v(" pods\n")])])]),s("h2",{attrs:{id:"install-the-app-mesh-components"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-the-app-mesh-components","aria-hidden":"true"}},[a._v("#")]),a._v(" Install the App Mesh components")]),a._v(" "),s("p",[a._v("Create the "),s("code",[a._v("appmesh-system")]),a._v(" namespace:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl create ns appmesh-system\n")])])]),s("p",[a._v("Apply the App Mesh CRDs:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl apply -k github.com/aws/eks-charts/stable/appmesh-controller//crds\n")])])]),s("p",[a._v("Add the EKS repository to Helm:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("helm repo "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" eks https://aws.github.io/eks-charts\n")])])]),s("p",[a._v("Install the App Mesh CRD controller:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("helm upgrade -i appmesh-controller eks/appmesh-controller "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--wait --namespace appmesh-system\n")])])]),s("p",[a._v("Install the App Mesh admission controller and create a mesh called "),s("code",[a._v("global")]),a._v(":")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("helm upgrade -i appmesh-inject eks/appmesh-inject "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--wait --namespace appmesh-system "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set mesh.create"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("true "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set mesh.name"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("global\n")])])]),s("p",[a._v("Verify that the global mesh is active:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl describe mesh\n\nStatus:\n  Mesh Condition:\n    Status:                True\n    Type:                  MeshActive\n")])])]),s("p",[a._v("In order to collect the App Mesh metrics that Flagger needs to run the canary analysis, you'll need to setup a Prometheus instance to scrape the Envoy sidecars.")]),a._v(" "),s("p",[a._v("Install the App Mesh Prometheus:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("helm upgrade -i appmesh-prometheus eks/appmesh-prometheus "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--wait --namespace appmesh-system\n")])])]),s("h2",{attrs:{id:"install-flagger-and-grafana"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#install-flagger-and-grafana","aria-hidden":"true"}},[a._v("#")]),a._v(" Install Flagger and Grafana")]),a._v(" "),s("p",[a._v("Add Flagger Helm repository:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("helm repo "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),a._v(" flagger https://flagger.app\n")])])]),s("p",[a._v("Install Flagger's Canary CRD:")]),a._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[a._v("kubectl apply "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("f https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("//raw.githubusercontent.com/weaveworks/flagger/master/artifacts/flagger/crd.yaml\n")])])]),s("p",[a._v("Deploy Flagger in the "),s("em",[s("strong",[a._v("appmesh-system")])]),a._v(" namespace:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("helm upgrade -i flagger flagger/flagger "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--namespace"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("appmesh-system "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set crd.create"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("false "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("meshProvider")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("appmesh "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("metricsServer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("http://appmesh-prometheus:9090\n")])])]),s("p",[a._v("You can enable Slack or MS Teams notifications with:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("helm upgrade -i flagger flagger/flagger "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--reuse-values "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--namespace"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("appmesh-system "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set slack.url"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set slack.channel"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("general "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set slack.user"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("flagger\n")])])]),s("p",[a._v("Flagger comes with a Grafana dashboard made for monitoring the canary analysis. Deploy Grafana in the "),s("em",[s("strong",[a._v("appmesh-system")])]),a._v(" namespace:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("helm upgrade -i flagger-grafana flagger/grafana "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--namespace"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("appmesh-system "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n--set "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("url")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("http://appmesh-prometheus:9090\n")])])]),s("p",[a._v("You can access Grafana using port forwarding:")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("kubectl -n appmesh-system port-forward svc/flagger-grafana "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3000")]),a._v(":80\n")])])]),s("p",[a._v("Now that you have Flagger running you can try the "),s("a",{attrs:{href:"https://docs.flagger.app/usage/appmesh-progressive-delivery",target:"_blank",rel:"noopener noreferrer"}},[a._v("App Mesh canary deployments tutorial"),s("OutboundLink")],1),a._v(".")])])},[],!1,null,null,null);e.default=r.exports}}]);